{"ast":null,"code":"var _jsxFileName = \"/Users/gavinkline/git-dev/cis454-group2/src/pages/projects.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { getDatabase, ref, child, get, set, onValue } from \"firebase/database\";\nimport { useNavigate } from \"react-router-dom\";\nimport React from \"react\";\nimport NewProjectForm from \"../components/Projects/NewProjectForm\";\nimport ProjectList from \"../components/Projects/ProjectList\";\nimport Backdrop from \"../components/Backdrop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Projects() {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [loadedProjects, setLoadedProjects] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    setIsLoading(true);\n    const db = getDatabase();\n    const projectRef = ref(db, 'projects');\n    onValue(projectRef, snapshot => {\n      const data = snapshot.val();\n      const projects = [];\n\n      for (const key in data) {\n        console.log(key);\n        const project = {\n          id: key,\n          ...data[key]\n        };\n        projects.push(project);\n      }\n\n      setIsLoading(false);\n      setLoadedProjects(projects);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  function addProjectHandler(projectData) {\n    console.log(projectData);\n    const db = getDatabase();\n    set(ref(db, 'projects/' + projectData.title), projectData);\n    navigate(\"/projects\");\n    closeModalHandler();\n  }\n\n  function viewHandler() {\n    setModalIsOpen(true);\n  }\n\n  function closeModalHandler() {\n    setModalIsOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-proj-btn\",\n        onClick: viewHandler,\n        children: \"+ Create New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n        projects: loadedProjects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [modalIsOpen && /*#__PURE__*/_jsxDEV(NewProjectForm, {\n        onAddProject: addProjectHandler,\n        onClose: closeModalHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(Backdrop, {\n        onClick: closeModalHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Projects, \"HOMjM/fBs7hu+YJtGaba/etS150=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["/Users/gavinkline/git-dev/cis454-group2/src/pages/projects.js"],"names":["useState","useEffect","getDatabase","ref","child","get","set","onValue","useNavigate","React","NewProjectForm","ProjectList","Backdrop","Projects","isLoading","setIsLoading","loadedProjects","setLoadedProjects","modalIsOpen","setModalIsOpen","navigate","db","projectRef","snapshot","data","val","projects","key","console","log","project","id","push","addProjectHandler","projectData","title","closeModalHandler","viewHandler"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { getDatabase, ref, child, get, set, onValue } from \"firebase/database\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport NewProjectForm from \"../components/Projects/NewProjectForm\";\r\nimport ProjectList from \"../components/Projects/ProjectList\";\r\nimport Backdrop from \"../components/Backdrop\";\r\n\r\n\r\nfunction Projects() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [loadedProjects, setLoadedProjects] = useState([]);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const db = getDatabase();\r\n    const projectRef = ref(db, 'projects');\r\n    onValue(projectRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n        const projects =[]\r\n        for (const key in data) {\r\n          console.log(key)\r\n          const project = {\r\n            id: key,\r\n            ...data[key]\r\n          };\r\n\r\n          projects.push(project);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        setLoadedProjects(projects);\r\n    });\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  function addProjectHandler(projectData) {\r\n    console.log(projectData);\r\n    const db = getDatabase();\r\n    set(ref(db, 'projects/' + projectData.title), projectData);\r\n    navigate(\"/projects\");\r\n    closeModalHandler()\r\n  }\r\n  \r\n  \r\n  function viewHandler() {\r\n    setModalIsOpen(true);\r\n  }\r\n\r\n  function closeModalHandler() {\r\n    setModalIsOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <h1 className=\"page-title\">Projects</h1>\r\n        <button className=\"create-proj-btn\" onClick={viewHandler}>+ Create New Project</button>\r\n        <hr></hr>\r\n        <ProjectList projects={loadedProjects} />\r\n      </section>\r\n      <div>\r\n        {modalIsOpen && (\r\n          <NewProjectForm\r\n          onAddProject={addProjectHandler}\r\n          onClose={closeModalHandler}/>\r\n        )}\r\n        {modalIsOpen && <Backdrop onClick={closeModalHandler} />}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"]},"metadata":{},"sourceType":"module"}