{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { GoogleAuthProvider, getAuth, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, sendPasswordResetEmail, signOut } from \"firebase/auth\";\nimport { getFirestore, query, getDocs, collection, where, addDoc } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC_Gh13Kj7XpYUJ77u-P6Rm_mluMSldj2s\",\n  authDomain: \"cis-454-group-2.firebaseapp.com\",\n  databaseURL: \"https://cis-454-group-2-default-rtdb.firebaseio.com\",\n  projectId: \"cis-454-group-2\",\n  storageBucket: \"cis-454-group-2.appspot.com\",\n  messagingSenderId: \"316148964938\",\n  appId: \"1:316148964938:web:d87993a8475d6aa9cd90b3\",\n  measurementId: \"G-6LV9TBP0N2\"\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst googleProvider = new GoogleAuthProvider();\n\nconst signInWithGoogle = async () => {\n  try {\n    const res = await signInWithPopup(auth, googleProvider);\n    const user = res.user;\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n    const docs = await getDocs(q);\n\n    if (docs.docs.length === 0) {\n      await addDoc(collection(db, \"users\"), {\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, email, password) => {\n  try {\n    const res = await createUserWithEmailAndPassword(auth, email, password);\n    const user = res.user;\n    await addDoc(collection(db, \"users\"), {\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordReset = async email => {\n  try {\n    await sendPasswordResetEmail(auth, email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  signOut(auth);\n};\n\nexport { auth, db, signInWithGoogle, logInWithEmailAndPassword, signInWithEmailAndPassword, registerWithEmailAndPassword, sendPasswordReset, sendPasswordResetEmail, logout };","map":{"version":3,"sources":["C:/Users/steve/Documents/Projects/cis454-group2/src/firebase.js"],"names":["initializeApp","GoogleAuthProvider","getAuth","signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","signOut","getFirestore","query","getDocs","collection","where","addDoc","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","db","googleProvider","signInWithGoogle","res","user","q","uid","docs","length","name","displayName","authProvider","email","err","console","error","alert","message","logInWithEmailAndPassword","password","registerWithEmailAndPassword","sendPasswordReset","logout"],"mappings":"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","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\n\r\nimport {\r\n    GoogleAuthProvider,\r\n    getAuth,\r\n    signInWithPopup,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    sendPasswordResetEmail,\r\n    signOut,\r\n} from \"firebase/auth\";\r\n\r\nimport {\r\n    getFirestore,\r\n    query,\r\n    getDocs,\r\n    collection,\r\n    where,\r\n    addDoc,\r\n} from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC_Gh13Kj7XpYUJ77u-P6Rm_mluMSldj2s\",\r\n    authDomain: \"cis-454-group-2.firebaseapp.com\",\r\n    databaseURL: \"https://cis-454-group-2-default-rtdb.firebaseio.com\",\r\n    projectId: \"cis-454-group-2\",\r\n    storageBucket: \"cis-454-group-2.appspot.com\",\r\n    messagingSenderId: \"316148964938\",\r\n    appId: \"1:316148964938:web:d87993a8475d6aa9cd90b3\",\r\n    measurementId: \"G-6LV9TBP0N2\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst db = getFirestore(app);\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst signInWithGoogle = async () => {\r\ntry {\r\n    const res = await signInWithPopup(auth, googleProvider);\r\n    const user = res.user;\r\n    const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\r\n    const docs = await getDocs(q);\r\n    if (docs.docs.length === 0) {\r\n    await addDoc(collection(db, \"users\"), {\r\n        uid: user.uid,\r\n        name: user.displayName,\r\n        authProvider: \"google\",\r\n        email: user.email,\r\n    });\r\n    }\r\n} catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n}\r\n};\r\n\r\nconst logInWithEmailAndPassword = async (email, password) => {\r\ntry {\r\n    await signInWithEmailAndPassword(auth, email, password);\r\n} catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n}\r\n};\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\ntry {\r\n    const res = await createUserWithEmailAndPassword(auth, email, password);\r\n    const user = res.user;\r\n    await addDoc(collection(db, \"users\"), {\r\n    uid: user.uid,\r\n    name,\r\n    authProvider: \"local\",\r\n    email,\r\n    });\r\n} catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n}\r\n};\r\nconst sendPasswordReset = async (email) => {\r\ntry {\r\n    await sendPasswordResetEmail(auth, email);\r\n    alert(\"Password reset link sent!\");\r\n} catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n}\r\n};\r\nconst logout = () => {\r\nsignOut(auth);\r\n};\r\nexport {\r\nauth,\r\ndb,\r\nsignInWithGoogle,\r\nlogInWithEmailAndPassword,\r\nsignInWithEmailAndPassword,\r\nregisterWithEmailAndPassword,\r\nsendPasswordReset,\r\nsendPasswordResetEmail,\r\nlogout,\r\n  };"]},"metadata":{},"sourceType":"module"}